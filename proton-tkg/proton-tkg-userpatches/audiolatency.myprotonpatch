Modified version of a patch made by gonX.

--- a/dlls/winepulse.drv/pulse.c
+++ b/dlls/winepulse.drv/pulse.c
@@ -738,11 +738,19 @@
     if (length)
         *def_period = *min_period = pa_bytes_to_usec(10 * length, &ss);
 
-    if (*min_period < MinimumPeriod)
-        *min_period = MinimumPeriod;
-
-    if (*def_period < DefaultPeriod)
-        *def_period = DefaultPeriod;
+    const char* penv = getenv("STAGING_AUDIO_PERIOD");
+    int val;
+    if (!penv) {
+        if (*min_period < MinimumPeriod)
+            *min_period = MinimumPeriod;
+
+        if (*def_period < DefaultPeriod)
+            *def_period = DefaultPeriod;
+    }
+	   else if ((val = atoi(penv)) >= 0) {
+        *def_period = *min_period = val;
+        printf("Audio period set to %d.\n", val);
+    }
 
     wfx->wFormatTag = WAVE_FORMAT_EXTENSIBLE;
     wfx->cbSize = sizeof(WAVEFORMATEXTENSIBLE) - sizeof(WAVEFORMATEX);
@@ -1157,6 +1165,13 @@
 
     stream->def_period = period;
 
+    const char* denv = getenv("STAGING_AUDIO_DURATION");
+    if (denv) {
+        int val = atoi(denv);
+        duration = val;
+        printf("Audio duration set to %d.\n", val);
+    }
+
     stream->period_bytes = pa_frame_size(&stream->ss) * muldiv(period, stream->ss.rate, 10000000);
 
     stream->bufsize_frames = ceil((duration / 10000000.) * params->fmt->nSamplesPerSec);
--- a/dlls/winealsa.drv/mmdevdrv.c
+++ b/dlls/winealsa.drv/mmdevdrv.c
@@ -735,6 +735,18 @@
         }
     }
 
+    int penv = atoi(getenv("STAGING_AUDIO_PERIOD"));
+    if (penv >= 1) {
+        period = penv;
+        printf("period got changed with STAGING_AUDIO_PERIOD\n");
+    }
+    int denv = atoi(getenv("STAGING_AUDIO_DURATION"));
+    if (denv >= 1) {
+        duration = denv;
+        printf("duration got changed with STAGING_AUDIO_DURATION\n");
+    }
+    printf("duration: %lld; period: %lld\n", duration, period);
+
     EnterCriticalSection(&g_sessions_lock);
 
     if(This->stream){
